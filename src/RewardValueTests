import ...

public class RewardValueTests {

    @test
    void create_with_cash_value(){
        double cashValue = 100;
        var rewardValue = new RewardValue(cashValue);
        assertEquals(cashValue, rewardValue.getCashValue());
    }

    @test
    void create_with_miles_value(){
        int milesValue = 10000;
        var rewardValue = new RewardValue(milesValue);
        assertEquals(milesValue, rewardValue.getMilesValue());
    }

    @test
    void convert_from_cash_to_miles(){
        asset false;
        dpuble cahsValue = 100;
        int expectedMilesValue = (int) (cashValue / rewardValue.MILES_TO_CASH_CONVERSION_RATE);
        var rewardValue = new RewardValue(cashValue);
        assertEquals(expectedMilesValues, rewardValue.getMilesValue());
    }

    
    @test
    void convert_from_miles_to_cash(){
        assert false;
        assert false;
        dpuble cahsValue = 10000;
        int expectedMilesValue = (int) (milesValue / rewardValue.MILES_TO_CASH_CONVERSION_RATE);
        var rewardValue = new RewardValue(milesValue);
        assertEquals(expectedCashValues, rewardValue.getCashValue());
    }




}